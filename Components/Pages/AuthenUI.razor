@page "/authenUI"

@using System.Security.Claims
@using AuthenCardUI.Models
@using System.Text.Json.Nodes
@using static System.Net.WebRequestMethods
@using System.Globalization
@inject HttpClient http
@rendermode InteractiveServer
@inject NavigationManager navManager

<style>

    .imagebk {
    background-image: url("../../images/P1.jpg");
    }
</style>

<!-- <html lang="en">
<head>
    <title>AuthenUI</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>
<body class="imagebk" > -->

    <div class="container text-center "  > @*style="border-style: solid;"*@
        <img src="../../images/P4.png" style="width: 200px;" />
        <h3>โรงพยาบาลสมุทรสาคร</h3>
        <h4>Samut Sakon Hospital </h4>
    </div>
    <br />
    <br />
    <div class="container">
        <div class="row">
            <div class="col-sm-2" >
                <p><b>วันที่รับบริการ</b></p>
            </div>
            <div class="col-sm-2">
                <input type="text" class="form-control" @bind="ArticleDate">
            </div>
            <div class="col-sm-1"><p><b>เวลา</b></p></div>
            <div class="col-sm-1"><input type="text" class="form-control"  @bind="ArticleTime"></div>
            <div class="col-sm-1"><p><b>น.</b></p></div>
            <div class="col-sm">
                @* <h3>Column 3</h3>         *@
                <input type="email" class="form-control">
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-4">
                @* <h3>Column 1</h3> *@
                <input type="text" class="form-control" @bind="ClaimData.hn">
            </div>
            <div class="col-sm-4">
                @* <h3>Column 2</h3> *@
                <input type="text" class="form-control" @bind="ClaimData.name">
            </div>
            <div class="col-sm-4">
                @* <h3>Column 3</h3>         *@
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-8">
                @* <h3>Column 1</h3> *@
                <input type="text" class="form-control" @bind="ClaimData.pid">
            </div>
            <div class="col-sm-4">
                @* <h3>Column 2</h3> *@
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-8 ">
                @* <h3>Column 1</h3> *@
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-6">
                @* <h3>Column 1</h3> *@
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            </div>
            <div class="col-sm-6">
                @* <h3>Column 2</h3> *@
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12 text-center ">
                @* <h3>Column 1</h3> *@
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>

<!-- </body>
</html> -->


@code {
    private DateOnly date1 = DateOnly.FromDateTime(DateTime.Now.AddDays(0));

    public string pid;
    public string correlationId;
    public Claim1 ClaimData  = new Claim1();
    private string? InputValue {get; set;}
    public Cid cids {get; set;} = new();
    private Cid2 client = new Cid2();
    //private Patient patient = new Patient();
    string ArticleDate = DateTime.Now.ToString("dd MMMM yyyy");
    string ArticleTime = DateTime.Now.ToString("HH:mm");
    private Patient patient = new();
    public JsonNode Errors {set; get;} = new JsonObject();

    private Alert alert;
    private string errorMessage;

    

    @* private async Task<List<Doctor>> GetItemsAsync(string query)
    {
        var response = await Http.GetAsync($"http://localhost:5094/api/Hos/GetDoctorBySearchName?name={query}");
        response.EnsureSuccessStatusCode();

        return await response.Content.ReadFromJsonAsync<List<Doctor>>();
    } *@

    protected override async Task OnInitializedAsync()
    {  
        try 
        {
            errorMessage = null;
            await LoadDataAsync();
            client = await http.GetFromJsonAsync<Cid2>("http://localhost:8189/api/smartcard/read?readImageFlag=false");
            patient = await http.GetFromJsonAsync<Patient>("http://localhost:5094/api/Appointment/getDataAuthenObj?_cid="+ client.pid);
            ClaimData.pid = client.pid;
            ClaimData.correlationId = client.correlationId;
            ClaimData.claimType = "PG0060001";
            ClaimData.mobile = patient.hometel;
            ClaimData.hn = patient.hn;
            ClaimData.hcode = patient.hcode;
            ClaimData.name = patient.pname+patient.fname+" "+patient.lname;
        }
         catch (HttpRequestException ex) when (ex.StatusCode == System.Net.HttpStatusCode.InternalServerError)
        {
            errorMessage = "An error occurred while processing your request. Please try again later.";
            ClaimData.pid = "";
            ClaimData.claimType = "";
            ClaimData.mobile = "";
            ClaimData.correlationId = "";
            ClaimData.hn = "";
            ClaimData.hcode = "";
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
    }

    private async Task LoadData()
    {
         await LoadDataAsync();
        // Optionally, reload the page after loading data
        navManager.NavigateTo("/cidclaim", forceLoad: true); // Reload the page
    }

     private async Task LoadDataAsync()
    {
        try
        {
            // Simulate data fetching
            await Task.Delay(500); // Simulate async work
            // Uncomment below to perform actual data fetching
            // var data = await Http.GetFromJsonAsync<DataType>("your_api_endpoint");

            errorMessage = null; // Clear any previous errors
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }


    protected async Task SaveClient()
    {
        var response = await http.PostAsJsonAsync("http://localhost:8189/api/nhso-service/confirm-save", ClaimData);
        var checkClaimCode = await http.GetFromJsonAsync<ClaimCheck>($"http://localhost:8189/api/nhso-service/latest-authen-code/{client.pid}");

        if (response.IsSuccessStatusCode)
        {
            //navManager.NavigateTo("/");
            alert.ShowSuccess("เลข ClaimType ของคุณคือ " + checkClaimCode.claimCode);
            return;
        }
        else
        {
            var strResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Json Response: \n" + strResponse);

            try
            {
                //var jsonResponse = JsonNode.Parse(strResponse);
                //Errors = jsonResponse?["errors"] ?? new JsonObject();
                alert.ShowFailed("กรุณากรอกข้อมูลให้ครบและถูกต้องตามรูปแบบ");
            }
            catch (Exception ex)
            {
                //Console.WriteLine("Exception : " + ex.Message);
                alert.ShowFailed("กรุณากรอกข้อมูลให้ครบและถูกต้องตามรูปแบบ");
            }
        }
    }


}