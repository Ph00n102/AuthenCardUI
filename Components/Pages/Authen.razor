@page "/authen"

@using System.Security.Claims
@using AuthenCardUI.Models
@using System.Text.Json.Nodes
@* @using static System.Net.WebRequestMethods *@
@using AuthenCardUI.Services
@using System.Net.Http.Json
@inject HttpClient http
@rendermode InteractiveServer
@inject NavigationManager navManager

<!-- <style>

    .imagebk {
    background-image: url("../../images/P1.jpg");
    }
</style> -->
    <title>Authen</title>
    
<!-- <body onload="LoadDataAsync()"> -->
    <!-- <div class="container text-center "  > @*style="border-style: solid;"*@
        <img src="../../images/P4.png" style="width: 200px;" />
        <h3>โรงพยาบาลสมุทรสาคร</h3>
        <h4>Samut Sakon Hospital</h4>
    </div>
    <br /> -->
    <div class="row">
        <div class="col-lg-2">
        </div>
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold"><h1 >เปิด Authen คนไข้</h1></h6>
                    <Alert @ref="alert" />
                     
                </div>
                    @if(client == null)
                    {
                        <p>loading...</p>
                    }else
                    {
                     
                    <div class="card-body">
                        <div class="px-3 bg-gradient-primary">
                            <div class="row ">
                                <div class="col-md-2 text-md-right"> </div>
                                <div class="col-md-3 text-md-right"><p class="text-md-right">pid</p></div>
                                <div class="col-md-6">
                                    <input class="form-control" @bind="ClaimData.pid">
                                    <span class="text-danger">@Errors["pid"]?[0]</span>
                                </div>
                            </div>
                            <div class="row md-3">
                                <div class="col-md-2 text-md-right"></div>
                                <div class="col-md-3 text-md-right"><p class="text-md-right">claimType</p></div>
                                <div class="col-md-6">
                                    <input class="form-control" @bind="ClaimData.claimType">
                                    <span class="text-danger">@Errors["claimType"]?[0]</span>
                                </div>
                            </div>
                            <div class="row md-3">
                                <div class="col-md-2 text-md-right"></div>
                                <div class="col-md-3 text-md-right"><p class="text-md-right">mobile</p></div>
                                <div class="col-md-6">
                                    <input class="form-control" @bind="ClaimData.mobile">
                                    <span class="text-danger">@Errors["mobile"]?[0]</span>
                                </div>
                            </div>
                            <div class="row md-3">
                                <div class="col-md-2 text-md-right"></div>
                                <div class="col-md-3 text-md-right"><p class="text-md-right">correlationId</p></div>
                                <div class="col-md-6">
                                    <input class="form-control" @bind="ClaimData.correlationId">
                                    <span class="text-danger">@Errors["correlationId"]?[0]</span>
                                </div>
                            </div>
                            <div class="row md-3">
                                <div class="col-md-2 text-md-right"></div>
                                <div class="col-md-3 text-md-right"><p class="text-md-right">hn</p></div>
                                <div class="col-md-6">
                                    <input class="form-control" @bind="ClaimData.hn">
                                    <span class="text-danger">@Errors["hn"]?[0]</span>
                                </div>
                            </div>
                            <div class="row md-3">
                                <div class="col-md-2 text-md-right"></div>
                                <div class="col-md-3 text-md-right"><p class="text-md-right">hcode</p></div>
                                <div class="col-md-6">
                                    <input class="form-control" @bind="ClaimData.hcode">
                                    <span class="text-danger">@Errors["hcode"]?[0]</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    } 
            </div>
            <div class="row">
                <div class="col-lg-8">
                    <div class="row">
                        <div class="offset-md-4 col-md-4 d-grid">
                            <button class="btn btn-primary" @onclick="SaveClient">เปิดสิทธิ์ authen</button>
                        </div>
                        <div class="col-md-4 d-grid">
                            <button class="btn btn-primary" @onclick="LoadData">โหลดข้อมูลคนไข้จากบัตรใหม่</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2">
        </div>
    </div>
    
<!-- </body> -->


@code {
    private DateOnly date1 = DateOnly.FromDateTime(DateTime.Now.AddDays(1));

    public string pid;
    public string correlationId;
    public Claim1 ClaimData = new Claim1();
    private string? InputValue {get; set;}
    public Cid cids {get; set;} = new();
    private Cid2 client = new Cid2();
    //private Patient patient = new Patient();
    private Patient patient = new();
    public JsonNode Errors {set; get;} = new JsonObject();

    private Alert alert;
    private string errorMessage;

    @* private async Task<List<Doctor>> GetItemsAsync(string query)
    {
        var response = await Http.GetAsync($"http://localhost:5094/api/Hos/GetDoctorBySearchName?name={query}");
        response.EnsureSuccessStatusCode();

        return await response.Content.ReadFromJsonAsync<List<Doctor>>();
    } *@

    protected override async Task OnInitializedAsync()
    {  
        try 
        {
            errorMessage = null;
            await LoadDataAsync();
            client = await http.GetFromJsonAsync<Cid2>("http://localhost:8189/api/smartcard/read?readImageFlag=false"); //api ของ hos
            patient = await http.GetFromJsonAsync<Patient>("http://localhost:5094/api/Appointment/getDataAuthenObj?_cid="+ client.pid);
            ClaimData.pid = client.pid;
            ClaimData.correlationId = client.correlationId;
            ClaimData.claimType = "PG0060001";
            ClaimData.mobile = patient.hometel;
            ClaimData.hn = patient.hn;
            ClaimData.hcode = patient.hcode;
            
            
        }
         catch (HttpRequestException ex) when (ex.StatusCode == System.Net.HttpStatusCode.InternalServerError)
        {
            errorMessage = "An error occurred while processing your request. Please try again later.";
            ClaimData.pid = "";
            ClaimData.claimType = "";
            ClaimData.mobile = "";
            ClaimData.correlationId = "";
            ClaimData.hn = "";
            ClaimData.hcode = "";
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
    }

    private async Task LoadData()
    {
        await LoadDataAsync();
        // Optionally, reload the page after loading data
        navManager.NavigateTo("/authen", forceLoad: true); // Reload the page
    }

     private async Task LoadDataAsync()
    {
        try
        {
            // Simulate data fetching
            await Task.Delay(500); // Simulate async work
            // Uncomment below to perform actual data fetching
            // var data = await Http.GetFromJsonAsync<DataType>("your_api_endpoint");

            errorMessage = null; // Clear any previous errors
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }


    protected async Task SaveClient()
    {
        var response = await http.PostAsJsonAsync("http://localhost:8189/api/nhso-service/confirm-save", ClaimData);
        var checkClaimCode = await http.GetFromJsonAsync<ClaimCheck>($"http://localhost:8189/api/nhso-service/latest-authen-code/{client.pid}");

        if (response.IsSuccessStatusCode)
        {
            //navManager.NavigateTo("/");
            alert.ShowSuccess("เลข ClaimType ของคุณคือ " + checkClaimCode.claimCode);
            return;
        }
        else
        {
            var strResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Json Response: \n" + strResponse);

            try
            {
                //var jsonResponse = JsonNode.Parse(strResponse);
                //Errors = jsonResponse?["errors"] ?? new JsonObject();
                alert.ShowFailed("กรุณากรอกข้อมูลให้ครบและถูกต้องตามรูปแบบ");
            }
            catch (Exception ex)
            {
                //Console.WriteLine("Exception : " + ex.Message);
                alert.ShowFailed("กรุณากรอกข้อมูลให้ครบและถูกต้องตามรูปแบบ");
            }
        }
    }


}